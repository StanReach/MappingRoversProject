// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package nl.vu.cs.s2.simbadtest;

import nl.vu.cs.s2.simbadtest.Coordinate;
import nl.vu.cs.s2.simbadtest.DataCollectionRover;
import nl.vu.cs.s2.simbadtest.MappingRover;
import nl.vu.cs.s2.simbadtest.Path;
import simbad.sim.Agent;

import java.util.*;

import javax.vecmath.Point3d;
import javax.vecmath.Vector3d;


/************************************************************/
/**
 * 
 */
public abstract class Rover extends Agent {
	public Rover(Vector3d arg0, String arg1) {
		super(arg0, arg1);
		// TODO Auto-generated constructor stub
	}
	

	/**
	 * 
	 */
	protected int speed;
	/**
	 * 
	 */
	protected int orientation = 0;
	/**
	 * 
	 */
	public Path path;
	/**
	 * 
	 */
	public int roverID;
	
	
	public controlCentre controlcentre;


	public int roverType;
	
	
	public Point3d destination;

	/**
	 * 
	 * @param coord  
	 */
	public void moveToLocation(Coordinate coord) {
		
	}

	/**
	 * 
	 * 
	 */
	public void rotate(int direction) {
		
		if (direction == 1) {
			
			rotateY((2 * Math.PI) / 8);
			
			orientation = (orientation + 1) % 8;
		} else {
			
			rotateY((-2 * Math.PI) / 8);
			
			orientation = (orientation - 1) % 8;
		}
	}

	/**
	 * 
	 */
	public void freeze() {
		speed = 0;
	}
	
	protected Point3d getCoordinates() {
    	
    	Point3d roverLocation = new Point3d();
    	getCoords(roverLocation);
    	
    	return roverLocation; 
    }
}
